swagger: '2.0'
schemes:
  - http
  - https

info:
  title: DSMR-reader API
  description: |
    ## Postman examples
    You can download the collection and variables below. Don't forget to set your API host and API key in the environment variables!

    - [Download Postman collection](/static/dsmr_frontend/postman/collection.json)
    - [Download Postman environment variables](/static/dsmr_frontend/postman/variables.json)

externalDocs:
  description: DSMR-reader general documentation
  url: 'https://dsmr-reader.readthedocs.io/'

securityDefinitions:
  Token:
    description: 'For each API request, include the ``Authorization`` header with value ``Token YOUR_API_KEY``.'
    type: apiKey
    name: Token
    in: header

x-tagGroups:
  - name: v1 API (datalogger)
    tags:
      - Remote datalogger
  - name: v2 API (REST)
    tags:
      - Datalogger
      - Consumption
      - Statistics
      - Application

paths:
  /api/v1/datalogger/dsmrreading:
    post:
      tags:
        - Remote datalogger
      operationId: v1_datalogger_dsmrreading
      summary: Create DSMR reading by telegram
      description: |
        This allows you to insert a raw telegram into the application, as if it was read locally using the serial cable.

        ### Script
        You can use a script to run in Supervisor. It will send telegrams to one or multiple instances of DSMR-reader.
        For detailed installation instructions, see [the installation guide for datalogger only](https://dsmr-reader.readthedocs.io/en/latest/installation/datalogger.html).

        ### Note
        It's difficult to create a valid URL encoded example. See the ``Python`` request sample for a better example of how to use this endpoint.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                telegram:
                  type: string
                  description: The raw telegram string containing all linefeeds ``\n``, and carriage returns ``\r``, as well!
      x-code-samples:
        - lang: 'Python'
          source: |
            import requests

            telegram_string = ''.join([
                "/KFM5KAIFA-METER\r\n",
                "\r\n",
                "1-3:0.2.8(42)\r\n",
                "0-0:1.0.0(160303164347W)\r\n",
                "0-0:96.1.1(*******************************)\r\n",
                "1-0:1.8.1(001073.079*kWh)\r\n",
                "1-0:1.8.2(001263.199*kWh)\r\n",
                "1-0:2.8.1(000000.000*kWh)\r\n",
                "1-0:2.8.2(000000.000*kWh)\r\n",
                "0-0:96.14.0(0002)\r\n",
                "1-0:1.7.0(00.143*kW)\r\n",
                "1-0:2.7.0(00.000*kW)\r\n",
                "0-0:96.7.21(00006)\r\n",
                "0-0:96.7.9(00003)\r\n",
                "1-0:99.97.0(1)(0-0:96.7.19)(000101000001W)(2147483647*s)\r\n",
                "1-0:32.32.0(00000)\r\n",
                "1-0:32.36.0(00000)\r\n",
                "0-0:96.13.1()\r\n",
                "0-0:96.13.0()\r\n",
                "1-0:31.7.0(000*A)\r\n",
                "1-0:21.7.0(00.143*kW)\r\n",
                "1-0:22.7.0(00.000*kW)\r\n",
                "!74B0\n",
            ])

            # Don't forget to replace 'YOUR-DSMR-URL' and 'YOUR-API-KEY' with your own values.
            response = requests.post(
                'http://YOUR-DSMR-URL/api/v1/datalogger/dsmrreading',
                headers={'Authorization': 'Token YOUR-API-KEY'},
                data={'telegram': telegram_string},
            )

            # You will receive a status 201 when successful.
            if response.status_code != 201:
                # Or you will find the error (hint) in the reponse body on failure.
                print('Error: {}'.format(response.text))

      responses:
        201:
          description: Created
        400:
          description: Bad request
        403:
          description: Forbidden
        500:
          description: Server error

  /api/v2/datalogger/dsmrreading:
    post:
      tags:
        - Datalogger
      operationId: v2_datalogger_dsmrreading_post
      summary: Create DSMR reading
      description: |
        Creates a reading from separate values, omitting the need for the original telegram.

        ### Note
        Readings are processed simultaneously by the background process. Therefor inserting readings **retroactively** might result in undesired results.

        Therefor inserting historic data might require you to delete all aggregated data using:
        ```
        sudo su - postgres
        psql dsmrreader
        truncate dsmr_consumption_electricityconsumption;
        truncate dsmr_consumption_gasconsumption;
        truncate dsmr_stats_daystatistics;
        truncate dsmr_stats_hourstatistics;

        # This query can take a long time!
        update dsmr_datalogger_dsmrreading set processed = False;
        ```

        This will process all readings again, from the very first start, and aggregate them (and **will** take a long time, depending on your reading count).

        *The datalogger may interfere. If your stats are not correctly after regenerating, try it again while having your datalogger disabled.*
      x-code-samples:
        - lang: 'Python'
          source: |
            import requests
            import json

            # Don't forget to replace 'YOUR-DSMR-URL' and 'YOUR-API-KEY' with your own values.
            response = requests.post(
                'http://YOUR-DSMR-URL/api/v2/datalogger/dsmrreading',
                headers={'Authorization': 'Token YOUR-API-KEY'},
                data={
                    'electricity_currently_delivered': 1.500,
                    'electricity_currently_returned': 0.025,
                    'electricity_delivered_1': 2000,
                    'electricity_delivered_2': 3000,
                    'electricity_returned_1': 0,
                    'electricity_returned_2': 0,
                    'timestamp': '2017-04-15T00:00:00+02',
                }
            )

            if response.status_code != 201:
                print('Error: {}'.format(response.text))
            else:
                print('Created: {}'.format(json.loads(response.text)))

      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
                  description: Timestamp indicating when the reading was taken, according to the smart meter
                electricity_currently_delivered:
                  type: number
                  format: float
                  description: Current electricity delivered in kW
                electricity_currently_returned:
                  type: number
                  format: float
                  description: Current electricity returned in kW
                electricity_delivered_1:
                  type: integer
                  description: Meter position stating electricity delivered (low tariff) in kWh
                electricity_delivered_2:
                  type: integer
                  description: Meter position stating electricity delivered (normal tariff) in kWh
                electricity_returned_1:
                  type: integer
                  description: Meter position stating electricity returned (low tariff) in kWh
                electricity_returned_2:
                  type: integer
                  description: Meter position stating electricity returned (normal tariff) in kWh
                phase_currently_delivered_l1:
                  required: false
                  type: number
                  format: float
                  description: Current electricity used by phase L1 (in kW)
                phase_currently_delivered_l2:
                  nullable: true
                  type: number
                  format: float
                  description: Current electricity used by phase L2 (in kW)
                phase_currently_delivered_l3:
                  nullable: true
                  type: number
                  format: float
                  description: Current electricity used by phase L3 (in kW)
                phase_currently_returned_l1:
                  nullable: true
                  type: number
                  format: float
                  description: Current electricity returned by phase L1 (in kW)
                phase_currently_returned_l2:
                  nullable: true
                  type: number
                  format: float
                  description: Current electricity returned by phase L2 (in kW)
                phase_currently_returned_l3:
                  nullable: true
                  type: number
                  format: float
                  description: Current electricity returned by phase L3 (in kW)
                extra_device_timestamp:
                  nullable: true
                  type: string
                  format: date-time
                  description: Last timestamp read from the extra device connected (gas meter)
                extra_device_delivered:
                  nullable: true
                  type: number
                  format: float
                  description: Last value read from the extra device connected (gas meter)
            examples:
              1:
                value:
                  timestamp: '2017-04-15T00:00:00+02'
                  electricity_currently_delivered: 1.500
                  electricity_currently_returned: 0.025
                  electricity_delivered_1: 2000
                  electricity_delivered_2: 3000
                  electricity_returned_1: 0
                  electricity_returned_2: 0

      responses:
        201:
          description: Created
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    id: 12185134
                    timestamp: '2017-04-15T00:00:00+02:00'
                    electricity_delivered_1: 2000.000
                    electricity_returned_1: 0.000
                    electricity_delivered_2: 3000.000
                    electricity_returned_2: 0.000
                    electricity_currently_delivered: 1.500
                    electricity_currently_returned: 0.025
                    phase_currently_delivered_l1: null
                    phase_currently_delivered_l2: null
                    phase_currently_delivered_l3: null
                    extra_device_timestamp: null
                    extra_device_delivered: null
                    phase_currently_returned_l1: null
                    phase_currently_returned_l2: null
                    phase_currently_returned_l3: null
                    phase_voltage_l1: null
                    phase_voltage_l2: null
                    phase_voltage_l3: null
        400:
          description: Bad request
        403:
          description: Forbidden

    get:
      tags:
        - Datalogger
      operationId: v2_datalogger_dsmrreading_get
      summary: Retrieve DSMR readings
      description: |
        Retrieves any readings stored. The readings are either constructed from incoming telegrams or were created using this API.

        *For example, fetching the latest reading created:*
        ```
        limit: 1
        ordering: -timestamp
        ```
        ### All parameters are optional
      parameters:
        - in: query
          name: timestamp__gte
          schema:
            type: string
            format: date-time
            example: '2020-01-14 12:00:00'
          description: Limits the result to any readings having a timestamp **higher or equal** to this parameter.
        - in: query
          name: timestamp__lte
          schema:
            type: string
            format: date-time
            example: '2020-01-20 12:00:00'
          description: Limits the result to any readings having a timestamp **lower or equal** to this parameter.
        - in: query
          name: ordering
          schema:
            type: string
            default: timestamp
            enum: ['timestamp', '-timestamp']
            example: '-timestamp'
          description: Omit or use ``timestamp`` to sort ascending. Use ``-timestamp`` to sort results descending.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            example: 10
          description: When iterating large resultsets, the offset determines the starting point.
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
            example: 5
          description: Limits the resultset size returned. Omit for maintaining the default limit (25).

      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    count: 67152
                    next: 'http://localhost:8000/api/v2/datalogger/dsmrreading?limit=25&offset=25'
                    previous: null
                    results:
                      - id: 173367
                        timestamp: '2016-01-01T01:00:06+01:00'
                        electricity_delivered_1: 656.326
                        electricity_returned_1: 0.000
                        electricity_delivered_2: 630.937
                        electricity_returned_2: 0.000
                        electricity_currently_delivered: 0.127
                        electricity_currently_returned: 0.000
                        phase_currently_delivered_l1: null
                        phase_currently_delivered_l2: null
                        phase_currently_delivered_l3: null
                        extra_device_timestamp: '2016-01-01T00:00:00+01:00'
                        extra_device_delivered: 1038.847
                        phase_currently_returned_l1: null
                        phase_currently_returned_l2: null
                        phase_currently_returned_l3: null
                        phase_voltage_l1: null
                        phase_voltage_l2: null
                        phase_voltage_l3: null
                      - id: 173725
                        timestamp: '2016-01-01T01:59:53+01:00'
                        electricity_delivered_1: 656.443
                        electricity_returned_1: 0.000
                        electricity_delivered_2: 630.937
                        electricity_returned_2: 0.000
                        electricity_currently_delivered: 0.063
                        electricity_currently_returned: 0.000
                        phase_currently_delivered_l1: null
                        phase_currently_delivered_l2: null
                        phase_currently_delivered_l3: null
                        extra_device_timestamp: '2016-01-01T01:00:00+01:00'
                        extra_device_delivered: 1040.011
                        phase_currently_returned_l1: null
                        phase_currently_returned_l2: null
                        phase_currently_returned_l3: null
                        phase_voltage_l1: null
                        phase_voltage_l2: null
                        phase_voltage_l3: null
        400:
          description: Bad request
        403:
          description: Forbidden

  /api/v2/datalogger/meter-statistics:
    get:
      tags:
        - Datalogger
      operationId: v2_datalogger_meterstatistics_get
      summary: Retrieve meter statistics
      description: |
        Retrieve meter statistics extracted by the datalogger.

        ### Since
        *This endpoint was added in DSMR-reader ``v3.1.0``*
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    id: 1
                    timestamp: '2020-01-15T20:13:40+01:00'
                    dsmr_version: '42'
                    electricity_tariff: 1
                    power_failure_count: 3
                    long_power_failure_count: 0
                    voltage_sag_count_l1: 1
                    voltage_sag_count_l2: 2
                    voltage_sag_count_l3: 3
                    voltage_swell_count_l1: 0
                    voltage_swell_count_l2: 0
                    voltage_swell_count_l3: 0
                    rejected_telegrams: 99
                    latest_telegram: '/XMX5LGBBFFB123456789\r\n\r\n1-3:0.2.8(40)\r\n0-0:1.0.0(200115201340W)\r\n0-0:96.1.1(12345678901234567890123456789000)\r\n1-0:1.8.1(007952.261*kWh)\r\n1-0:2.8.1(000000.000*kWh)\r\n1-0:1.8.2(004771.357*kWh)\r\n1-0:2.8.2(000000.000*kWh)\r\n0-0:96.14.0(0001)\r\n1-0:1.7.0(02.507*kW)\r\n1-0:2.7.0(00.000*kW)\r\n0-0:96.7.21(00003)\r\n0-0:96.7.9(00000)\r\n1-0:99.97.0(0)(0-0:96.7.19)\r\n1-0:32.32.0(00001)\r\n1-0:52.32.0(00002)\r\n1-0:72.32.0(00003)\r\n1-0:32.36.0(00000)\r\n1-0:52.36.0(00000)\r\n1-0:72.36.0(00000)\r\n0-0:96.13.1()\r\n0-0:96.13.0()\r\n1-0:32.7.0(225.0*V)\r\n1-0:52.7.0(232.1*V)\r\n1-0:72.7.0(233.2*V)\r\n1-0:31.7.0(000*A)\r\n1-0:51.7.0(000*A)\r\n1-0:71.7.0(001*A)\r\n1-0:21.7.0(01.407*kW)\r\n1-0:41.7.0(00.765*kW)\r\n1-0:61.7.0(00.334*kW)\r\n1-0:22.7.0(00.000*kW)\r\n1-0:42.7.0(00.000*kW)\r\n1-0:62.7.0(00.000*kW)\r\n!013B'
        403:
          description: Forbidden
    patch:
      tags:
        - Datalogger
      operationId: v2_datalogger_meterstatistics_patch
      summary: Update meter statistics
      description: |
        Manually update any meter statistics fields. Only use this when you're not using the built-in datalogger (of v1 telegram API).

        ### Since
        *This endpoint was added in DSMR-reader ``v3.1.0``*

        ### All parameters are optional
        *As this is a ``PATCH`` operation, you can specify one, multiple of all parameters fields, depending on your own needs.*
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                timestamp:
                  type: string
                  format: date-time
                  description: Timestamp indicating the last update. The builtin datalogger uses the timestamp of the telegram for this.
                dsmr_version:
                  nullable: true
                  type: integer
                  description: DSMR protocol version string. Should be something like ``42`` (4.2) or ``50`` (5.0)
                power_failure_count:
                  nullable: true
                  type: integer
                  description: Number of power failures in any phase
                long_power_failure_count:
                  nullable: true
                  type: integer
                  description: Number of long power failures in any phase
                voltage_sag_count_l1:
                  nullable: true
                  type: integer
                  description: Number of voltage sags/dips in phase L1
                voltage_sag_count_l2:
                  nullable: true
                  type: integer
                  description: Number of voltage sags/dips in phase L2 (polyphase meters only)
                voltage_sag_count_l3:
                  nullable: true
                  type: integer
                  description: Number of voltage sags/dips in phase L3 (polyphase meters only)
                voltage_swell_count_l1:
                  nullable: true
                  type: integer
                  description: Number of voltage swells in phase L1
                voltage_swell_count_l2:
                  nullable: true
                  type: integer
                  description: Number of voltage swells in phase L2 (polyphase meters only)
                voltage_swell_count_l3:
                  nullable: true
                  type: integer
                  description: Number of voltage swells in phase L3 (polyphase meters only)
                rejected_telegrams:
                  type: integer
                  description: Number of rejected telegrams due to invalid CRC checksum
                latest_telegram:
                  nullable: true
                  type: string
                  description: The latest telegram succesfully read
            examples:
              1:
                value:
                  timestamp: '2020-01-15T12:34:56+01'
                  dsmr_version: '50'
                  power_failure_count: 1
                  voltage_sag_count_l1: 5
                  voltage_swell_count_l1: 6
                  latest_telegram: null
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    id: 1
                    timestamp: '2020-01-15T12:34:56+01:00'
                    dsmr_version: '50'
                    electricity_tariff: null
                    power_failure_count: 1
                    long_power_failure_count: 0
                    voltage_sag_count_l1: 5
                    voltage_sag_count_l2: 0
                    voltage_sag_count_l3: 0
                    voltage_swell_count_l1: 6
                    voltage_swell_count_l2: 0
                    voltage_swell_count_l3: 0
                    rejected_telegrams: 104
                    latest_telegram: null
        400:
          description: Bad request
        403:
          description: Forbidden

  /api/v2/consumption/electricity:
    get:
      tags:
        - Consumption
      operationId: v2_consumption_electricity_get
      summary: Retrieve electricity consumption
      description: |
        Retrieves any data regarding electricity consumption. This is based on the readings processed.

        ### All parameters are optional
      parameters:
        - in: query
          name: read_at__gte
          schema:
            type: string
            format: date-time
            example: '2020-01-14 12:00:00'
          description: Limits the result to any records having a timestamp **higher or equal** to this parameter.
        - in: query
          name: read_at__lte
          schema:
            type: string
            format: date-time
            example: '2020-01-20 12:00:00'
          description: Limits the result to any records having a timestamp **lower or equal** to this parameter.
        - in: query
          name: ordering
          schema:
            type: string
            default: read_at
            enum: ['read_at', '-read_at']
            example: '-read_at'
          description: Omit or use ``read_at`` to sort ascending. Use ``-read_at`` to sort results descending.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            example: 10
          description: When iterating large resultsets, the offset determines the starting point.
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
            example: 5
          description: Limits the resultset size returned. Omit for maintaining the default limit (25).
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    count: 147
                    next: 'http://localhost:8000/api/v2/consumption/electricity?limit=5&offset=15&ordering=-read_at&read_at__gte=2020-01-14+12%3A00%3A00&read_at__lte=2020-01-20+12%3A00%3A00'
                    previous: 'http://localhost:8000/api/v2/consumption/electricity?limit=5&offset=5&ordering=-read_at&read_at__gte=2020-01-14+12%3A00%3A00&read_at__lte=2020-01-20+12%3A00%3A00'
                    results:
                      - id: 2037892
                        read_at: '2020-01-14T19:17:50+01:00'
                        delivered_1: 7947.774
                        returned_1: 0.000
                        delivered_2: 4768.665
                        returned_2: 0.000
                        currently_delivered: 1.895
                        currently_returned: 0.000
                        phase_currently_delivered_l1: 0.635
                        phase_currently_delivered_l2: 0.084
                        phase_currently_delivered_l3: 1.175
                        phase_currently_returned_l1: 0.000
                        phase_currently_returned_l2: 0.000
                        phase_currently_returned_l3: 0.000
                        phase_voltage_l1: 234.0
                        phase_voltage_l2: 234.1
                        phase_voltage_l3: 229.2
                      - id: 2037891
                        read_at: '2020-01-14T19:17:49+01:00'
                        delivered_1: 7947.774
                        returned_1: 0.000
                        delivered_2: 4768.665
                        returned_2: 0.000
                        currently_delivered: 2.297
                        currently_returned: 0.000
                        phase_currently_delivered_l1: 1.139
                        phase_currently_delivered_l2: 1.041
                        phase_currently_delivered_l3: 0.119
                        phase_currently_returned_l1: 0.000
                        phase_currently_returned_l2: 0.000
                        phase_currently_returned_l3: 0.000
                        phase_voltage_l1: 231.0
                        phase_voltage_l2: 232.1
                        phase_voltage_l3: 229.2
        400:
          description: Bad request
        403:
          description: Forbidden

  /api/v2/consumption/gas:
    get:
      tags:
        - Consumption
      operationId: v2_consumption_gas_get
      summary: Retrieve gas consumption
      description: |
        Retrieves any data regarding gas consumption. This is based on the readings processed.

        ### All parameters are optional
      parameters:
        - in: query
          name: read_at__gte
          schema:
            type: string
            format: date-time
            example: '2020-01-14 12:00:00'
          description: Limits the result to any records having a timestamp **higher or equal** to this parameter.
        - in: query
          name: read_at__lte
          schema:
            type: string
            format: date-time
            example: '2020-01-20 12:00:00'
          description: Limits the result to any records having a timestamp **lower or equal** to this parameter.
        - in: query
          name: ordering
          schema:
            type: string
            default: read_at
            enum: ['read_at', '-read_at']
            example: '-read_at'
          description: Omit or use ``read_at`` to sort ascending. Use ``-read_at`` to sort results descending.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            example: 10
          description: When iterating large resultsets, the offset determines the starting point.
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
            example: 5
          description: Limits the resultset size returned. Omit for maintaining the default limit (25).
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    count: 17
                    next: 'http://localhost:8000/api/v2/consumption/gas?limit=5&offset=15&ordering=-read_at&read_at__gte=2020-01-14+12%3A00%3A00&read_at__lte=2020-01-20+12%3A00%3A00'
                    previous: 'http://localhost:8000/api/v2/consumption/gas?limit=5&offset=5&ordering=-read_at&read_at__gte=2020-01-14+12%3A00%3A00&read_at__lte=2020-01-20+12%3A00%3A00'
                    results:
                      - id: 35162
                        read_at: '2020-01-14T18:00:00+01:00'
                        delivered: 3188.897
                        currently_delivered: 0.000
                      - id: 35161
                        read_at: '2020-01-14T17:00:00+01:00'
                        delivered: 3188.897
                        currently_delivered: 0.000
        400:
          description: Bad request
        403:
          description: Forbidden

  /api/v2/consumption/today:
    get:
      tags:
        - Consumption
      operationId: v2_consumption_today_get
      summary: Retrieve today's consumption
      description: Returns the consumption of the current day so far.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    day: '2020-01-17'
                    electricity1: 1.0
                    electricity2: 2.0
                    electricity1_returned: 4.0
                    electricity2_returned: 8.0
                    electricity_merged: 3.0
                    electricity_returned_merged: 12.0
                    electricity1_cost: 0.0
                    electricity2_cost: 0.0
                    total_cost: 0.0
                    energy_supplier_price_electricity_delivered_1: 0.0
                    energy_supplier_price_electricity_delivered_2: 0.0
                    energy_supplier_price_electricity_returned_1: 0.0
                    energy_supplier_price_electricity_returned_2: 0.0
                    energy_supplier_price_gas: 0.0
                    gas: 0.0
                    gas_cost: 0.0
        403:
          description: Forbidden

  /api/v2/consumption/electricity-live:
    get:
      tags:
        - Consumption
      operationId: v2_consumption_electricity_live_get
      summary: Retrieve live electricity consumption
      description: Returns the live electricity consumption, containing the same data as the Dashboard header.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    timestamp: '2020-01-15T05:59:54+01:00'
                    currently_delivered: 53
                    currently_returned: 0
                    cost_per_hour: 0.01
        403:
          description: Forbidden

  /api/v2/consumption/gas-live:
    get:
      tags:
        - Consumption
      operationId: v2_consumption_gas_live_get
      summary: Retrieve live gas consumption
      description: Returns the latest gas consumption.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    timestamp: '2020-01-15T04:00:00+01:00'
                    currently_delivered: 0.0
                    cost_per_interval: 0.00
        403:
          description: Forbidden

  /api/v2/statistics/day:
    get:
      tags:
        - Statistics
      operationId: v2_statistics_day_get
      summary: Retrieve day statistics
      description: |
        Retrieves any aggregated day statistics.

        ### Note
        *These are generated a few hours after midnight.*

        ### All parameters are optional
      parameters:
        - in: query
          name: day__gte
          schema:
            type: string
            format: date
            example: '2020-01-01'
          description: Limits the result to any records having a timestamp **higher or equal** to this parameter.
        - in: query
          name: day__lte
          schema:
            type: string
            format: date
            example: '2020-01-20'
          description: Limits the result to any records having a timestamp **lower or equal** to this parameter.
        - in: query
          name: ordering
          schema:
            type: string
            default: day
            enum: ['day', '-day']
            example: '-day'
          description: Omit or use ``day`` to sort ascending. Use ``-day`` to sort results descending.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            example: 10
          description: When iterating large resultsets, the offset determines the starting point.
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
            example: 5
          description: Limits the resultset size returned. Omit for maintaining the default limit (25).
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    count: 14
                    next: null
                    previous: 'http://localhost:8000/api/v2/statistics/day?day__gte=2020-01-01&day__lte=2020-01-20&limit=5&offset=5&ordering=-day'
                    results:
                      - id: 1735
                        day: '2020-01-04'
                        total_cost: 4.07
                        electricity1: 8.386
                        electricity2: 0.000
                        electricity1_returned: 0.000
                        electricity2_returned: 0.000
                        electricity1_cost: 1.77
                        electricity2_cost: 0.00
                        gas: 3.528
                        gas_cost: 2.30
                        lowest_temperature: 1.8
                        highest_temperature: 7.5
                        average_temperature: 4.9
                      - id: 1734
                        day: '2020-01-03'
                        total_cost: 2.90
                        electricity1: 1.061
                        electricity2: 3.768
                        electricity1_returned: 0.000
                        electricity2_returned: 0.000
                        electricity1_cost: 0.22
                        electricity2_cost: 0.87
                        gas: 2.781
                        gas_cost: 1.81
                        lowest_temperature: 2.6
                        highest_temperature: 9.3
                        average_temperature: 7.1
        400:
          description: Bad request
        403:
          description: Forbidden

  /api/v2/statistics/hour:
    get:
      tags:
        - Statistics
      operationId: v2_statistics_hour_get
      summary: Retrieve hour statistics
      description: |
        Retrieves any aggregated hour statistics.

        ### Note
        *These are generated a few hours after midnight.*

        ### All parameters are optional
      parameters:
        - in: query
          name: hour_start__gte
          schema:
            type: string
            format: date
            example: '2020-01-01 12:00:00'
          description: Limits the result to any records having a timestamp **higher or equal** to this parameter.
        - in: query
          name: hour_start__lte
          schema:
            type: string
            format: date
            example: '2020-01-20 12:00:00'
          description: Limits the result to any records having a timestamp **lower or equal** to this parameter.
        - in: query
          name: ordering
          schema:
            type: string
            default: hour_start
            enum: ['hour_start', '-hour_start']
            example: '-hour_start'
          description: Omit or use ``hour_start`` to sort ascending. Use ``-hour_start`` to sort results descending.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
            example: 10
          description: When iterating large resultsets, the offset determines the starting point.
        - in: query
          name: limit
          schema:
            type: integer
            default: 25
            example: 5
          description: Limits the resultset size returned. Omit for maintaining the default limit (25).
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    count: 324
                    next: 'http://localhost:8000/api/v2/statistics/hour?hour_start__gte=2020-01-01+12%3A00%3A00&hour_start__lte=2020-01-20+12%3A00%3A00&limit=5&offset=15&ordering=-hour_start'
                    previous: 'http://localhost:8000/api/v2/statistics/hour?hour_start__gte=2020-01-01+12%3A00%3A00&hour_start__lte=2020-01-20+12%3A00%3A00&limit=5&offset=5&ordering=-hour_start'
                    results:
                      - id: 38025
                        hour_start: '2020-01-14T13:00:00+01:00'
                        electricity1: 0.000
                        electricity2: 0.085
                        electricity1_returned: 0.000
                        electricity2_returned: 0.000
                        gas: 0.000
                      - id: 38024
                        hour_start: '2020-01-14T12:00:00+01:00'
                        electricity1: 0.000
                        electricity2: 0.091
                        electricity1_returned: 0.000
                        electricity2_returned: 0.000
                        gas: 0.000
        400:
          description: Bad request
        403:
          description: Forbidden

  /api/v2/application/version:
    get:
      tags:
        - Application
      operationId: v2_application_version_get
      summary: Application version
      description: Returns the version of DSMR-reader you are running.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    version: '3.1.0'
        403:
          description: Forbidden

  /api/v2/application/status:
    get:
      deprecated: true
      tags:
        - Application
      operationId: v2_application_status_get
      summary: Application status
      description: |
        Returns the status of DSMR-reader, containing the same data as displayed on the Status page.

        ### Deprecated
        This endpoint is deprecated and may change or disappear in future releases!
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: ~
              examples:
                1:
                  value:
                    now: '2020-01-17T19:38:18.019145Z'
                    scheduled_processes:
                      - id: 1
                        name: 'Backup per email'
                        module: 'dsmr_backup.services.email.run'
                        last_executed_at: '2020-01-04T17:38:18.571147Z'
                        planned: '2020-02-01T17:38:20.749607Z'
                        active: true
                      - id: 2
                        name: 'Automatic update checker'
                        module: 'dsmr_backend.services.update_checker.run'
                        last_executed_at: '2020-01-13T21:16:17.753212Z'
                        planned: '2020-01-20T21:16:18.076523Z'
                        active: true
                      - id: 4
                        name: Weather update
                        module: dsmr_weather.services.run
                        last_executed_at: '2020-01-17T18:56:58.293757Z'
                        planned: '2020-01-17T19:00:00Z'
                        active: true
                      - id: 3
                        name: 'Generate day and hour statistics'
                        module: 'dsmr_stats.services.run'
                        last_executed_at: '2020-01-17T18:56:58.375397Z'
                        planned: '2020-01-17T19:01:58.381268Z'
                        active: true
                      - id: 5
                        name: 'Upload gas meter position to MinderGas.nl'
                        module: 'dsmr_mindergas.services.run'
                        last_executed_at: '2020-01-17T18:56:58.283306Z'
                        planned: '2020-01-16T04:34:00Z'
                        active: false
                    capabilities:
                        electricity: true
                        electricity_returned: false
                        multi_phases: true
                        voltage: true
                        gas: true
                        weather: true
                        any: true
                    electricity:
                        latest: '2020-01-17T18:58:43Z'
                        minutes_since: 40
                    gas:
                        latest: '2020-01-15T03:00:00Z'
                        hours_since: 65
                    readings:
                        latest: '2020-01-17T18:58:43Z'
                        seconds_since: 2375
                        unprocessed:
                            count: 0
                            seconds_since: null
                    statistics:
                        ok: false
                        latest: '2020-01-14'
                        days_since: 3
                    tools:
                        backup:
                            enabled: false
                            latest_backup: null
                        dropbox:
                            enabled: false
                            latest_sync: null
                        pvoutput:
                            enabled: true
                            latest_sync: '2019-05-09T03:55:02.298308Z'
                        mindergas:
                            enabled: false
                            latest_sync: null
                        mqtt:
                            ok: true
                            pending_messages: 22
        403:
          description: Forbidden
